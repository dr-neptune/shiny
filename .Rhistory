install.packages(c("gapminder", "ggforce", "openintro", "shiny", "shinyFeedback", "shinythemes", "vroom", "waiter"))
shinyApp(ui, server)
library(shiny)
library(shiny)
library(shiny)
library(tidyverse)
?sidebarLayout
library(shiny)
library(tidyverse)
getwd()
setwd("~/Documents/ccn_dash")
query %>% glimpse()
?Sys.Date
ls
ls()
go()
devtools::install_github("JohnCoene/waiter")
1
install.packages("janitor", dependencies = T)
?dateInput
server <- function(input, output, session) {
    observeEvent(input$year, {
        newDateMin <- paste0(input$year, "-01-01")
        newDateMax <- paste0(input$year, "-12-31")
        updateDateInput(session, "date", min = newDateMin, max = newDateMax)})
}
sp()
sp()
sp()
sp()
sp()
server <- function(input, output, session) {
    observeEvent(input$year, {
        newDateMin <- reactive(paste0(input$year, "-01-01"))
        newDateMax <- reactive(paste0(input$year, "-12-31"))
        updateDateInput(session, "date",
                        min = newDateMin,
      .... [TRUNCATED] 
sp()
sp()
sp()
server <- function(input, output, session) {
    observeEvent(input$year, {
        newDateMin <- reactive(format(paste0(input$year, "-01-01")))
        newDateMax <- reactive(format(paste0(input$year, "-12-31")))
        updateDateInput(session, "date",
                        min = new .... [TRUNCATED] 
server <- function(input, output, session) {
    observeEvent(input$year, {
        newDateMin <- reactive(format(paste0(input$year, "-01-01")))
        newDateMax <- reactive(format(paste0(input$year, "-12-31")))
        updateDateInput(session, "date",
                        min = new .... [TRUNCATED] 
server <- function(input, output, session) {
    observeEvent(input$year, {
        newDateMin <- reactive(format(paste0(input$year, "-01-01")))
        newDateMax <- reactive(format(paste0(input$year, "-12-31")))
        updateDateInput(session, "date",
                        min = new .... [TRUNCATED] 
sp()
server <- function(input, output, session) {
    observeEvent(input$year, {
        newDateMin <- reactive(format(paste0(input$year, "-01-01")))
        newDateMax <- reactive(format(paste0(input$year, "-12-31")))
        updateDateInput(session, "date",
                        min = new .... [TRUNCATED] 
county$name
server <- function(input, output, session) {
    statein <- reactive({
        chosen_state <- reactive(filter(county, state == input$state))})

    observeEvent(statein(), {
        choices <- unique(statein()$name)
        updateSelectInput(session, "county", choices = choices)})
}
install.packages("chron)
install.packages("chron")
sp()
ymd(Sys.Date()) - ymd("2019-01-17")
(ymd(Sys.Date()) - ymd("2019-01-17")) %% 365
install.packages("dplyr")
library(dplyr)
sessionInfo()
devtools::install_github("hadley/dplyr")
1
1
1
library(dplyr)
sessionInfo()
